All of these scripts rely on the bleeding edge of coreutils to be stored and
built in the directory "../../coreutils" to be tested against.  You can do
this with these commands:

$ cd ../..
$ git clone git://git.sv.gnu.org/coreutils
$ cd coreutils
$ ./bootstrap
$ ./configure
$ make

If you have any difficulty with dependencies while building, refer to the
"/coreutils/README-hacking" and "/coreutils/README-prereq" files in the newly
clones coreutils folder.

To build the generators, simply use the "make" command inside 
"coreutils-sort/test-case-generators/generators". 
"general_numeric_generator" will have warnings on build, ignore them.

To run stage 1 tests, use the run_*_test.sh scripts in the stage1 directory.
They expect an argument of how many lines to produce to be piped to the sort
benchmark.  All output is redirected to "/dev/null" because of the storage
limitations on the seasnet servers.

To run stage 2 tests, use the run_*_test.sh scripts in the stage2 directory.
They expect an argument of how many lines to produce to be piped to the sort
benchmark, and the size of the sort buffer in units of 1024 bytes.  All output
is redirected to "/dev/null" because of the storage limitations on the
seasnet servers.

After completion, the scripts will display the time taken by each version
using the command time.  This includes the time to run the generator and
the sort program.  Because we are working with percentages, this is okay.
